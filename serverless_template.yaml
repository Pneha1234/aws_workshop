AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation Template for Lambda, EventBridge, Lambda Layer, SQS, and IAM Role

Resources:
  LambdaFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      FunctionName: StockRecommendationSystem
      Handler: main.lambda_handler
      Role: !GetAtt StockRecommendationRole.Arn
      Code:
        ZipFile: |
          import json
          import boto3

          def lambda_handler(event, context):
              # TODO implement
              # Initialize the AWS SDK
              eventbridge = boto3.client('events')
              print(eventbridge)
              return {
                  'statusCode': 200,
                  'body': json.dumps('Hello from Lambda!')
              }
      Runtime: python3.11

  StockRecommendationRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: [ 'sts:AssumeRole' ]
            Effect: Allow
            Principal:
              Service: [ 'firehose.amazonaws.com', 'lambda.amazonaws.com', ]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyDocument:
            Statement:
              - Action: execute-api:Invoke
                Effect: Allow
                Resource: "arn:aws:execute-api:*:*:*"
              - Action: [ "ssm:GetParameter" ]
                Effect: Allow
                Resource: "*"
              - Action: lambda:InvokeFunction
                Effect: Allow
                Resource: "*"
              - Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutRetentionPolicy'
                  - 'logs:DescribeLogGroups'
                  - 'logs:DescribeLogStreams'
                  - 'logs:PutLogEvents'
                  - 'logs:GetLogEvents'
                Resource: 'arn:aws:logs:*:*:*'
                Effect: Allow
              - Action:
                  - firehose:DescribeDeliveryStream
                  - firehose:ListDeliveryStreams
                  - firehose:PutRecord
                  - firehose:PutRecordBatch
                  - firehose:GetRecords
                  - firehose:GetShardIterator
                  - firehose:DescribeStream
                  - firehose:ListShards
                  - firehose:ListStreams
                Effect: Allow
                Resource: "*"
              - Action:
                  - kinesis:PutRecord
                  - kinesis:PutRecordBatch
                  - kinesis:GetRecords
                  - kinesis:GetShardIterator
                  - kinesis:DescribeStream
                  - kinesis:ListShards
                  - kinesis:ListStreams
                Effect: Allow
                Resource: "*"
              - Action:
                  - s3:AbortMultipartUpload
                  - s3:GetBucketLocation
                  - s3:GetObject
                  - s3:PutObject
                  - s3:ListBucket
                  - s3:ListBucketMultipartUploads
                Effect: Allow
                Resource: "*"
              - Action:
                  - secretsmanager:GetSecretValue
                Effect: Allow
                Resource: "*"
            Version: '2012-10-17'
          PolicyName: StockPolicy

  EventBridgeRule:
    Type: 'AWS::Events::Rule'
    Properties:
      Name: LambdaEventRule
      Description: EventBridge Rule for Lambda
      ScheduleExpression: rate(5 minutes)
      State: ENABLED
      Targets:
        - Arn: !GetAtt LambdaFunction.Arn
          Id: LambdaTarget
          InputTransformer:
            InputPathsMap:
              detail-type: "$.detail-type"
            InputTemplate: '{"hello": "world", "hello1": "world2" }'



